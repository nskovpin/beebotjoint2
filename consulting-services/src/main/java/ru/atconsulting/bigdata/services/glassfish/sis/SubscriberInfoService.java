
package ru.atconsulting.bigdata.services.glassfish.sis;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SubscriberInfoService", targetNamespace = "urn:gf-subscriber-info-service:wsdl", wsdlLocation = "http://ms-glass006:8670/SIS?wsdl")
public class SubscriberInfoService
    extends Service
{


    private final static URL SUBSCRIBERINFOSERVICE_WSDL_LOCATION;
    private final static WebServiceException SUBSCRIBERINFOSERVICE_EXCEPTION;
    private final static QName SUBSCRIBERINFOSERVICE_QNAME = new QName("urn:gf-subscriber-info-service:wsdl", "SubscriberInfoService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://ms-glass006:8670/SIS?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SUBSCRIBERINFOSERVICE_WSDL_LOCATION = url;
        SUBSCRIBERINFOSERVICE_EXCEPTION = e;
    }

    public SubscriberInfoService() {
        super(__getWsdlLocation(), SUBSCRIBERINFOSERVICE_QNAME);
    }

    public SubscriberInfoService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SUBSCRIBERINFOSERVICE_QNAME, features);
    }

    public SubscriberInfoService(URL wsdlLocation) {
        super(wsdlLocation, SUBSCRIBERINFOSERVICE_QNAME);
    }

    public SubscriberInfoService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SUBSCRIBERINFOSERVICE_QNAME, features);
    }

    public SubscriberInfoService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SubscriberInfoService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SubscriberWithFilter
     */
    @WebEndpoint(name = "SubscriberWithFilterBindingPort")
    public SubscriberWithFilter getSubscriberWithFilterBindingPort() {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscriberWithFilterBindingPort"), SubscriberWithFilter.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SubscriberWithFilter
     */
    @WebEndpoint(name = "SubscriberWithFilterBindingPort")
    public SubscriberWithFilter getSubscriberWithFilterBindingPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscriberWithFilterBindingPort"), SubscriberWithFilter.class, features);
    }

    /**
     *
     * @return
     *     returns SubscriberHierarchy
     */
    @WebEndpoint(name = "SubscriberHierarchyBindingPort")
    public SubscriberHierarchy getSubscriberHierarchyBindingPort() {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscriberHierarchyBindingPort"), SubscriberHierarchy.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SubscriberHierarchy
     */
    @WebEndpoint(name = "SubscriberHierarchyBindingPort")
    public SubscriberHierarchy getSubscriberHierarchyBindingPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscriberHierarchyBindingPort"), SubscriberHierarchy.class, features);
    }

    /**
     *
     * @return
     *     returns SubscriberDebt
     */
    @WebEndpoint(name = "SubscriberDebtBindingPort")
    public SubscriberDebt getSubscriberDebtBindingPort() {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscriberDebtBindingPort"), SubscriberDebt.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SubscriberDebt
     */
    @WebEndpoint(name = "SubscriberDebtBindingPort")
    public SubscriberDebt getSubscriberDebtBindingPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscriberDebtBindingPort"), SubscriberDebt.class, features);
    }

    /**
     *
     * @return
     *     returns SubscriberHistory
     */
    @WebEndpoint(name = "SubscriberHistoryBindingPort")
    public SubscriberHistory getSubscriberHistoryBindingPort() {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscriberHistoryBindingPort"), SubscriberHistory.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SubscriberHistory
     */
    @WebEndpoint(name = "SubscriberHistoryBindingPort")
    public SubscriberHistory getSubscriberHistoryBindingPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscriberHistoryBindingPort"), SubscriberHistory.class, features);
    }

    /**
     *
     * @return
     *     returns SubscribeInfo
     */
    @WebEndpoint(name = "SubscribeInfoBindingPort")
    public SubscribeInfo getSubscribeInfoBindingPort() {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscribeInfoBindingPort"), SubscribeInfo.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SubscribeInfo
     */
    @WebEndpoint(name = "SubscribeInfoBindingPort")
    public SubscribeInfo getSubscribeInfoBindingPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscribeInfoBindingPort"), SubscribeInfo.class, features);
    }

    /**
     *
     * @return
     *     returns SubscriberFTTB
     */
    @WebEndpoint(name = "SubscriberFTTBBindingPort")
    public SubscriberFTTB getSubscriberFTTBBindingPort() {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscriberFTTBBindingPort"), SubscriberFTTB.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SubscriberFTTB
     */
    @WebEndpoint(name = "SubscriberFTTBBindingPort")
    public SubscriberFTTB getSubscriberFTTBBindingPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscriberFTTBBindingPort"), SubscriberFTTB.class, features);
    }

    /**
     *
     * @return
     *     returns SubscriberInfoBatch
     */
    @WebEndpoint(name = "SubscriberInfoBatchBindingPort")
    public SubscriberInfoBatch getSubscriberInfoBatchBindingPort() {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscriberInfoBatchBindingPort"), SubscriberInfoBatch.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SubscriberInfoBatch
     */
    @WebEndpoint(name = "SubscriberInfoBatchBindingPort")
    public SubscriberInfoBatch getSubscriberInfoBatchBindingPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:gf-subscriber-info-service:wsdl", "SubscriberInfoBatchBindingPort"), SubscriberInfoBatch.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SUBSCRIBERINFOSERVICE_EXCEPTION!= null) {
            throw SUBSCRIBERINFOSERVICE_EXCEPTION;
        }
        return SUBSCRIBERINFOSERVICE_WSDL_LOCATION;
    }

}
